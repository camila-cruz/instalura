# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "lint"
  lint:
    name: Lint
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # [[AJUSTES GERAIS]]
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2 # uses: usa esse plugin/extensão
      - uses: actions/setup-node@v1
        with:
          node-version: '14.15.0'
      ########################################

      # Runs a single command using the runners shell
      - name: Checa versão do Node
        run: node -v
      - name: Instala dependências
        run: npm install
      - name: Roda o linter!
        run: npm run lint

  # Configuração do Lighthouse (performance)
  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      
      - name: Create .env file
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_DATO_CMS_TOKEN: ${{ secrets.DATO_CMS_TOKEN }}

      - name: Instala as dependências e faz o build do projeto        
        env:
          DATO_CMS_TOKEN: ${{ secrets.DATO_CMS_TOKEN }}
        run: |
          npm install
          npm run build
      
      - name: Roda o Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.7.x
          lhci autorun

  # Configuração dos testes de unidade
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest # The type of runner that the job will run on
    steps: # Steps represent a sequence of tasks that will be executed as part of the job
      # [Pre Build-step]
      - uses: actions/checkout@v2 ## Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/setup-node@v1
        with:
          node-version: '14.15.0'
          
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      # ####################

      # Commands that will run:
      - name: Install Packages
        run: yarn --prefer-offline

      - name: Run Unit Tests
        run: yarn test

  # Configuração dos testes de integração
  integration_tests:
    name: Integration Tests
    runs-on: ubuntu-latest # The type of runner that the job will run on
    steps: # Steps represent a sequence of tasks that will be executed as part of the job
      # [Pre Build-step]
      - uses: actions/checkout@v2 ## Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/setup-node@v1
        with:
          node-version: '14.15.0'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      # ####################

      - name: Create .env file
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_DATO_CMS_TOKEN: ${{ secrets.DATO_CMS_TOKEN }}

      # Commands that will run:
      - name: Install Packages
        run: npm install
        # run: yarn --prefer-offline

      - name: Run Integration Tests
        env:
          DATO_CMS_TOKEN: ${{ secrets.DATO_CMS_TOKEN }}
        run: |
          npm config set scripts-prepend-node-path auto
          yarn test:integration:build 
